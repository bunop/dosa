{"name":"Dosa","tagline":"Python wrapper for Digital Ocean API V2","body":"Python wrapper for Digital Ocean [API\r\nV2](https://developers.digitalocean.com).\r\n\r\n[![Latest\r\nVersion](https://badge.fury.io/py/dosa.svg)](http://badge.fury.io/py/dosa)\r\n\r\n[![Number of PyPI\r\ndownloads](https://pypip.in/d/dosa/badge.png)](https://crate.io/packages/dosa/)\r\n\r\nInstallation\r\n============\r\n\r\n``` {.sourceCode .bash}\r\npip install dosa\r\n```\r\n\r\nUsage\r\n=====\r\n\r\n``` {.sourceCode .python}\r\nimport dosa\r\n\r\nAPI_KEY = 'Your API Key'\r\ndosa.set_debug()  # enables debug logs\r\n\r\nclient = dosa.Client(api_key=API_KEY)\r\n\r\n# Droplets\r\nclient.droplets.list()\r\nstatus, result = client.droplets.create(name='terminator', region='nyc2',\\\r\n    size='512mb', image='ubuntu-14-04-x32', ssh_keys=[12345])\r\nnew_droplet_id = result['id']\r\n\r\n# Droplet\r\nnew_droplet = client.Droplet(new_droplet_id)\r\nprint(new_droplet.info())\r\n## shortcuts\r\nnew_droplet.status()\r\nnew_droplet.ip_addresses()\r\nclient.droplets.delete(new_droplet_id)\r\n\r\n# SSH Keys\r\npub_key = open('~/.ssh/id_rsa.pub').read()\r\nclient.keys.create(name='RSA key', public_key=pub_key)\r\nclient.keys.list()\r\n\r\n# Images\r\nclient.images.list()\r\nclient.images.all()\r\nclient.images.search('ubuntu', 'sgp1', show_op=True)\r\n\r\n# Domains\r\nclient.domains.list()\r\nclient.domains.all()\r\nclient.domains.create(name='example.com', ip_address='1.2.3.4')\r\nclient.domains.delete(id='example.com')\r\n\r\n### Get specific domain\r\ndomain = client.Domain(domain='example.com')\r\ndomain.info()\r\n\r\n# Domain Records\r\ndr = client.DomainRecords(domain='example.com')\r\ndr.list()\r\ndr.create(type='A', name='example.com', data='162.10.66.0')\r\n\r\n### Get specific domain record for a domain\r\nrecord = dr.Record(record_id='7976006')\r\nrecord.info()\r\nrecord.update(name='new.example.com')\r\n\r\n# Extras\r\n# $ ls keys/\r\n# rsa_pub1.id  rsa_pub2.key  rsa_pub3.key\r\nkeys_dir = 'keys'\r\nclient.sync_ssh_keys(keys_dir)\r\n```\r\n\r\nNotes\r\n=====\r\n\r\nImage search:\r\n\r\n    >>> client.images.search('ubuntu', region='sgp1', show_op=True)\r\n\r\nAbove code snippets searches for images containing ubuntu in description\r\nor slug. Since region is specified (sgp1), only images in sgp1 region\r\nwould be considered. If no region is specified all regions are included.\r\n\r\nCredits\r\n=======\r\n\r\nCreated while working on [Scroll.in](http://scroll.in)'s project.\r\n\r\nDosa?\r\n=====\r\n\r\n[![\"Paper Masala Dosa\" by SteveR- -\r\n<http://www.flickr.com/photos/git/3936135033/>. Licensed under Creative\r\nCommons Attribution 2.0 via Wikimedia\r\nCommons](http://upload.wikimedia.org/wikipedia/commons/thumb/3/34/Paper_Masala_Dosa.jpg/640px-Paper_Masala_Dosa.jpg)](http://commons.wikimedia.org/wiki/File:Paper_Masala_Dosa.jpg#mediaviewer/File:Paper_Masala_Dosa.jpg)\r\n\r\n","google":"UA-51914996-1","note":"Don't delete this file! It's used internally to help with page regeneration."}